(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-barcode6', ['exports', '@angular/core'], factory) :
    (global = global || self, factory(global['ngx-barcode6'] = {}, global.ng.core));
}(this, function (exports, core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var jsbarcode = require('jsbarcode');
    var NgxBarcode6Component = /** @class */ (function () {
        function NgxBarcode6Component(renderer) {
            this.renderer = renderer;
            this.elementType = 'svg';
            this.cssClass = 'barcode'; // this should be done more elegantly
            // this should be done more elegantly
            this.format = 'CODE128';
            this.lineColor = '#000000';
            this.width = 2;
            this.height = 100;
            this.displayValue = false;
            this.fontOptions = '';
            this.font = 'monospace';
            this.textAlign = 'center';
            this.textPosition = 'bottom';
            this.textMargin = 2;
            this.fontSize = 20;
            this.background = '#ffffff';
            this.margin = 10;
            this.marginTop = 10;
            this.marginBottom = 10;
            this.marginLeft = 10;
            this.marginRight = 10;
            this.value = '';
            this.valid = (/**
             * @return {?}
             */
            function () { return true; });
        }
        Object.defineProperty(NgxBarcode6Component.prototype, "options", {
            get: /**
             * @return {?}
             */
            function () {
                return {
                    format: this.format,
                    lineColor: this.lineColor,
                    width: this.width,
                    height: this.height,
                    displayValue: this.displayValue,
                    fontOptions: this.fontOptions,
                    font: this.font,
                    textAlign: this.textAlign,
                    textPosition: this.textPosition,
                    textMargin: this.textMargin,
                    fontSize: this.fontSize,
                    background: this.background,
                    margin: this.margin,
                    marginTop: this.marginTop,
                    marginBottom: this.marginBottom,
                    marginLeft: this.marginLeft,
                    marginRight: this.marginRight,
                    valid: this.valid,
                };
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        NgxBarcode6Component.prototype.ngOnChanges = /**
         * @return {?}
         */
        function () {
            this.createBarcode();
        };
        /**
         * @return {?}
         */
        NgxBarcode6Component.prototype.createBarcode = /**
         * @return {?}
         */
        function () {
            var e_1, _a;
            if (!this.value) {
                return;
            }
            /** @type {?} */
            var element;
            switch (this.elementType) {
                case 'img':
                    element = this.renderer.createElement('img');
                    break;
                case 'canvas':
                    element = this.renderer.createElement('canvas');
                    break;
                case 'svg':
                default:
                    element = this.renderer.createElement('svg', 'svg');
            }
            jsbarcode(element, this.value, this.options);
            try {
                for (var _b = __values(this.bcElement.nativeElement.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var node = _c.value;
                    this.renderer.removeChild(this.bcElement.nativeElement, node);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.renderer.appendChild(this.bcElement.nativeElement, element);
        };
        NgxBarcode6Component.decorators = [
            { type: core.Component, args: [{
                        selector: 'ngx-barcode6',
                        template: "<div #bcElement [class]=\"cssClass\"></div>"
                    }] }
        ];
        /** @nocollapse */
        NgxBarcode6Component.ctorParameters = function () { return [
            { type: core.Renderer2 }
        ]; };
        NgxBarcode6Component.propDecorators = {
            elementType: [{ type: core.Input, args: ['bc-element-type',] }],
            cssClass: [{ type: core.Input, args: ['bc-class',] }],
            format: [{ type: core.Input, args: ['bc-format',] }],
            lineColor: [{ type: core.Input, args: ['bc-line-color',] }],
            width: [{ type: core.Input, args: ['bc-width',] }],
            height: [{ type: core.Input, args: ['bc-height',] }],
            displayValue: [{ type: core.Input, args: ['bc-display-value',] }],
            fontOptions: [{ type: core.Input, args: ['bc-font-options',] }],
            font: [{ type: core.Input, args: ['bc-font',] }],
            textAlign: [{ type: core.Input, args: ['bc-text-align',] }],
            textPosition: [{ type: core.Input, args: ['bc-text-position',] }],
            textMargin: [{ type: core.Input, args: ['bc-text-margin',] }],
            fontSize: [{ type: core.Input, args: ['bc-font-size',] }],
            background: [{ type: core.Input, args: ['bc-background',] }],
            margin: [{ type: core.Input, args: ['bc-margin',] }],
            marginTop: [{ type: core.Input, args: ['bc-margin-top',] }],
            marginBottom: [{ type: core.Input, args: ['bc-margin-bottom',] }],
            marginLeft: [{ type: core.Input, args: ['bc-margin-left',] }],
            marginRight: [{ type: core.Input, args: ['bc-margin-right',] }],
            value: [{ type: core.Input, args: ['bc-value',] }],
            bcElement: [{ type: core.ViewChild, args: ['bcElement', { static: true },] }],
            valid: [{ type: core.Input, args: ['bc-valid',] }]
        };
        return NgxBarcode6Component;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxBarcode6Module = /** @class */ (function () {
        function NgxBarcode6Module() {
        }
        NgxBarcode6Module.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NgxBarcode6Component],
                        imports: [],
                        exports: [NgxBarcode6Component]
                    },] }
        ];
        return NgxBarcode6Module;
    }());

    exports.NgxBarcode6Component = NgxBarcode6Component;
    exports.NgxBarcode6Module = NgxBarcode6Module;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ngx-barcode6.umd.js.map
